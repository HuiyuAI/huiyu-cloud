<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huiyu.service.core.mapper.UserMapper">

    <resultMap type="com.huiyu.service.api.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="enabled" column="enabled" jdbcType="BOOLEAN"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               openid,
               username,
               password,
               avatar,
               gender,
               enabled,
               role
        from user
        where id = #{id}
    </select>

    <!--查询单个-->
    <select id="queryByOpenid" resultMap="UserMap">
        select id,
               openid,
               username,
               password,
               avatar,
               gender,
               enabled,
               role
        from user
        where openid = #{openid}
    </select>

    <!--查询单个-->
    <select id="queryByUsername" resultMap="UserMap">
        select id,
               openid,
               username,
               password,
               avatar,
               gender,
               enabled,
               role
        from user
        where username = #{username}
    </select>

    <!--查询指定行数据-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, openid, username, password, avatar, gender, enabled, role
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="openid != null and openid != ''">
                and openid = #{openid}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="openid != null and openid != ''">
                and openid = #{openid}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(openid, username, password, avatar, gender, enabled, role)
        values (#{openid}, #{username}, #{password}, #{avatar}, #{gender}, #{enabled}, #{role})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(openid, username, password, avatar, gender, enabled, role)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.openid}, #{entity.username}, #{entity.password}, #{entity.avatar}, #{entity.gender},
            #{entity.enabled}, #{entity.role})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(openid, username, password, avatar, gender, enabled, role)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.openid}, #{entity.username}, #{entity.password}, #{entity.avatar}, #{entity.gender},
            #{entity.enabled}, #{entity.role})
        </foreach>
        on duplicate key update
        openid = values(openid),
        username = values(username),
        password = values(password),
        avatar = values(avatar),
        gender = values(gender),
        enabled = values(enabled),
        role = values(role)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="openid != null and openid != ''">
                openid = #{openid},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="role != null and role != ''">
                role = #{role},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
    </delete>
</mapper>
